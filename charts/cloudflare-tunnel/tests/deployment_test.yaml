suite: test deployment
templates:
  - deployment.yaml
  - configmap.yaml
  - secret.yaml
tests:
  - it: should create a deployment with default values
    set:
      cloudflare:
        account: "test-account"
        tunnelName: "test-tunnel"
        tunnelId: "test-id"
        secret: "test-secret"
        ingress:
          - hostname: test.example.com
            service: http://test-service:80
    asserts:
      - template: deployment.yaml
        isKind:
          of: Deployment
      - template: deployment.yaml
        equal:
          path: metadata.name
          value: RELEASE-NAME-cloudflare-tunnel
      - template: deployment.yaml
        equal:
          path: spec.replicas
          value: 2
      - template: deployment.yaml
        equal:
          path: spec.template.spec.containers[0].image
          value: "cloudflare/cloudflared:2025.9.1"

  - it: should use custom image tag when specified
    set:
      cloudflare:
        account: "test-account"
        tunnelName: "test-tunnel"
        tunnelId: "test-id"
        secret: "test-secret"
      image:
        tag: "custom-tag"
    asserts:
      - template: deployment.yaml
        equal:
          path: spec.template.spec.containers[0].image
          value: "cloudflare/cloudflared:custom-tag"

  - it: should set correct security context
    set:
      cloudflare:
        account: "test-account"
        tunnelName: "test-tunnel"
        tunnelId: "test-id"
        secret: "test-secret"
    asserts:
      - template: deployment.yaml
        equal:
          path: spec.template.spec.securityContext.runAsNonRoot
          value: true
      - template: deployment.yaml
        equal:
          path: spec.template.spec.securityContext.runAsUser
          value: 65532
      - template: deployment.yaml
        equal:
          path: spec.template.spec.containers[0].securityContext.allowPrivilegeEscalation
          value: false
      - template: deployment.yaml
        equal:
          path: spec.template.spec.containers[0].securityContext.readOnlyRootFilesystem
          value: true

  - it: should mount config and creds volumes
    set:
      cloudflare:
        account: "test-account"
        tunnelName: "test-tunnel"
        tunnelId: "test-id"
        secret: "test-secret"
    asserts:
      - template: deployment.yaml
        contains:
          path: spec.template.spec.containers[0].volumeMounts
          content:
            name: config
            mountPath: /etc/cloudflared/config
            readOnly: true
      - template: deployment.yaml
        contains:
          path: spec.template.spec.containers[0].volumeMounts
          content:
            name: creds
            mountPath: /etc/cloudflared/creds
            readOnly: true

  - it: should configure liveness probe
    set:
      cloudflare:
        account: "test-account"
        tunnelName: "test-tunnel"
        tunnelId: "test-id"
        secret: "test-secret"
    asserts:
      - template: deployment.yaml
        equal:
          path: spec.template.spec.containers[0].livenessProbe.httpGet.path
          value: /ready
      - template: deployment.yaml
        equal:
          path: spec.template.spec.containers[0].livenessProbe.httpGet.port
          value: 2000

  - it: should use custom secret name when provided
    set:
      cloudflare:
        account: "test-account"
        tunnelName: "test-tunnel"
        tunnelId: "test-id"
        secret: "test-secret"
        secretName: "my-custom-secret"
    asserts:
      - template: deployment.yaml
        equal:
          path: spec.template.spec.volumes[0].secret.secretName
          value: "my-custom-secret"

  - it: should apply pod anti-affinity by default
    set:
      cloudflare:
        account: "test-account"
        tunnelName: "test-tunnel"
        tunnelId: "test-id"
        secret: "test-secret"
    asserts:
      - template: deployment.yaml
        exists:
          path: spec.template.spec.affinity.podAntiAffinity

  - it: should use custom affinity when provided
    set:
      cloudflare:
        account: "test-account"
        tunnelName: "test-tunnel"
        tunnelId: "test-id"
        secret: "test-secret"
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  - key: node-role
                    operator: In
                    values:
                      - worker
    asserts:
      - template: deployment.yaml
        exists:
          path: spec.template.spec.affinity.nodeAffinity
      - template: deployment.yaml
        notExists:
          path: spec.template.spec.affinity.podAntiAffinity

  - it: should set custom replica count
    set:
      cloudflare:
        account: "test-account"
        tunnelName: "test-tunnel"
        tunnelId: "test-id"
        secret: "test-secret"
      replicaCount: 5
    asserts:
      - template: deployment.yaml
        equal:
          path: spec.replicas
          value: 5

  - it: should add pod annotations when specified
    set:
      cloudflare:
        account: "test-account"
        tunnelName: "test-tunnel"
        tunnelId: "test-id"
        secret: "test-secret"
      podAnnotations:
        custom-annotation: "value"
    asserts:
      - template: deployment.yaml
        equal:
          path: spec.template.metadata.annotations["custom-annotation"]
          value: "value"
