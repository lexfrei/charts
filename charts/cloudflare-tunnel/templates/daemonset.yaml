{{- if eq .Values.deploymentMode "daemonset" }}
{{- if and .Values.postQuantum (eq .Values.protocol "http2") }}
{{- fail "postQuantum cannot be enabled with http2 protocol. Use 'auto' or 'quic' instead." }}
{{- end }}
# DaemonSet ensures one cloudflared pod per node
# Useful for preventing port exhaustion and following Cloudflare recommendations
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: {{ include "cloudflare-tunnel.fullname" . }}
  labels:
    {{- include "cloudflare-tunnel.labels" . | nindent 4 }}
spec:
  selector:
    matchLabels:
      {{- include "cloudflare-tunnel.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      annotations:
        # These are here so the daemonset rolls when the config or secret change.
        checksum/configmap: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
        checksum/secret: {{ include (print $.Template.BasePath "/secret.yaml") . | sha256sum }}
        {{- with .Values.podAnnotations }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      labels:
        {{- include "cloudflare-tunnel.selectorLabels" . | nindent 8 }}
        {{- with .Values.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- if .Values.priorityClassName }}
      priorityClassName: {{ .Values.priorityClassName }}
      {{- end }}
      serviceAccountName: {{ include "cloudflare-tunnel.fullname" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          {{- if or (and .Values.logLevel (ne .Values.logLevel "")) (and .Values.protocol (ne .Values.protocol "")) .Values.postQuantum (and .Values.region (ne .Values.region "")) (and .Values.retries (ne .Values.retries "")) (and .Values.edgeIpVersion (ne .Values.edgeIpVersion "")) (and .Values.gracePeriod (ne .Values.gracePeriod "")) (and .Values.edgeBindAddress (ne .Values.edgeBindAddress "")) (and .Values.tags (gt (len .Values.tags) 0)) }}
          env:
            {{- if and .Values.logLevel (ne .Values.logLevel "") }}
            - name: TUNNEL_LOGLEVEL
              value: {{ .Values.logLevel }}
            {{- end }}
            {{- if and .Values.protocol (ne .Values.protocol "") }}
            - name: TUNNEL_TRANSPORT_PROTOCOL
              value: {{ .Values.protocol }}
            {{- end }}
            {{- if .Values.postQuantum }}
            - name: TUNNEL_POST_QUANTUM
              value: "true"
            {{- end }}
            {{- if and .Values.region (ne .Values.region "") }}
            - name: TUNNEL_REGION
              value: {{ .Values.region | quote }}
            {{- end }}
            {{- if and .Values.retries (ne .Values.retries "") }}
            - name: TUNNEL_RETRIES
              value: {{ .Values.retries | quote }}
            {{- end }}
            {{- if and .Values.edgeIpVersion (ne .Values.edgeIpVersion "") }}
            - name: TUNNEL_EDGE_IP_VERSION
              value: {{ .Values.edgeIpVersion | quote }}
            {{- end }}
            {{- if and .Values.gracePeriod (ne .Values.gracePeriod "") }}
            - name: TUNNEL_GRACE_PERIOD
              value: {{ .Values.gracePeriod | quote }}
            {{- end }}
            {{- if and .Values.edgeBindAddress (ne .Values.edgeBindAddress "") }}
            - name: TUNNEL_EDGE_BIND_ADDRESS
              value: {{ .Values.edgeBindAddress | quote }}
            {{- end }}
            {{- if and .Values.tags (gt (len .Values.tags) 0) }}
            - name: TUNNEL_TAG
              value: {{ $tags := list }}{{- range $key, $value := .Values.tags }}{{ $tags = append $tags (printf "%s=%s" $key $value) }}{{- end }}{{ join "," $tags }}
            {{- end }}
          {{- end }}
          args:
            - tunnel
            # Points cloudflared to the config file, which configures what
            # cloudflared will actually do. This file is created by a ConfigMap.
            - --config
            - /etc/cloudflared/config/config.yaml
            - run
          livenessProbe:
            httpGet:
              # Cloudflared has a /ready endpoint which returns 200 if and only if
              # it has an active connection to the edge.
              path: /ready
              port: {{ .Values.metricsPort }}
            failureThreshold: {{ .Values.livenessProbe.failureThreshold }}
            initialDelaySeconds: {{ .Values.livenessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.livenessProbe.periodSeconds }}
            {{- with .Values.livenessProbe.timeoutSeconds }}
            timeoutSeconds: {{ . }}
            {{- end }}
          volumeMounts:
            - name: config
              mountPath: /etc/cloudflared/config
              readOnly: true
            # Each tunnel has an associated "credentials file" which authorizes machines
            # to run the tunnel. cloudflared will read this file from its local filesystem,
            # and it'll be stored in a k8s secret.
            - name: creds
              mountPath: /etc/cloudflared/creds
              readOnly: true
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      volumes:
        - name: creds
          secret:
            secretName: {{ .Values.cloudflare.secretName | default (include "cloudflare-tunnel.fullname" .) }}
        - name: config
          configMap:
            name: {{ include "cloudflare-tunnel.fullname" . }}
            items:
              - key: config.yaml
                path: config.yaml
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
{{- end }}
