{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "type": "object",
  "properties": {
    "nameOverride": {
      "type": "string",
      "description": "Override the name of the chart"
    },
    "fullnameOverride": {
      "type": "string",
      "description": "Override the full name of the chart"
    },
    "namespace": {
      "type": "string",
      "description": "Namespace to deploy vipalived into",
      "default": "kube-system"
    },
    "image": {
      "type": "object",
      "properties": {
        "repository": {
          "type": "string",
          "description": "Container image repository"
        },
        "pullPolicy": {
          "type": "string",
          "enum": ["Always", "IfNotPresent", "Never"],
          "description": "Image pull policy"
        },
        "tag": {
          "type": "string",
          "description": "Container image tag"
        }
      },
      "required": ["repository", "pullPolicy"]
    },
    "imagePullSecrets": {
      "type": "array",
      "items": {
        "type": "object"
      },
      "description": "Image pull secrets for private registries"
    },
    "keepalived": {
      "type": "object",
      "properties": {
        "routerId": {
          "type": "string",
          "description": "Router identifier for keepalived"
        },
        "vrrpVersion": {
          "type": "integer",
          "enum": [2, 3],
          "description": "VRRP protocol version"
        },
        "garp": {
          "type": "object",
          "properties": {
            "masterDelay": {
              "type": "integer",
              "minimum": 0,
              "description": "Delay for gratuitous ARP after master transition"
            },
            "masterRefresh": {
              "type": "integer",
              "minimum": 0,
              "description": "Interval for gratuitous ARP refresh on master"
            },
            "masterRepeat": {
              "type": "integer",
              "minimum": 0,
              "description": "Number of gratuitous ARP packets to send at master transition"
            },
            "masterRefreshRepeat": {
              "type": "integer",
              "minimum": 0,
              "description": "Number of gratuitous ARP packets to send at refresh"
            }
          },
          "required": ["masterDelay", "masterRefresh", "masterRepeat", "masterRefreshRepeat"]
        },
        "vrrpInstance": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "VRRP instance name"
            },
            "state": {
              "type": "string",
              "enum": ["MASTER", "BACKUP"],
              "description": "Initial VRRP state"
            },
            "interface": {
              "type": "string",
              "description": "Network interface to use for VRRP"
            },
            "priority": {
              "type": "integer",
              "minimum": 1,
              "maximum": 255,
              "description": "VRRP priority"
            },
            "virtualRouterId": {
              "type": "integer",
              "minimum": 1,
              "maximum": 255,
              "description": "Virtual router ID"
            },
            "advertInt": {
              "type": "integer",
              "minimum": 1,
              "description": "Advertisement interval in seconds"
            },
            "nopreempt": {
              "type": "boolean",
              "description": "Enable non-preemptive mode"
            },
            "authentication": {
              "type": "object",
              "properties": {
                "authType": {
                  "type": "string",
                  "enum": ["PASS", "AH"],
                  "description": "Authentication type"
                },
                "authPass": {
                  "type": "string",
                  "maxLength": 8,
                  "description": "Authentication password"
                }
              },
              "required": ["authType", "authPass"]
            },
            "virtualIpAddress": {
              "type": "string",
              "pattern": "^([0-9]{1,3}\\.){3}[0-9]{1,3}/[0-9]{1,2}$",
              "description": "Virtual IP address with CIDR notation"
            }
          },
          "required": ["name", "state", "interface", "priority", "virtualRouterId", "advertInt", "nopreempt", "authentication", "virtualIpAddress"]
        }
      },
      "required": ["routerId", "vrrpVersion", "garp", "vrrpInstance"]
    },
    "updateStrategy": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": ["RollingUpdate", "OnDelete"],
          "description": "Update strategy type"
        },
        "maxUnavailable": {
          "type": "integer",
          "minimum": 1,
          "description": "Maximum number of unavailable pods during update"
        }
      },
      "required": ["type"]
    },
    "hostNetwork": {
      "type": "boolean",
      "description": "Enable host network mode"
    },
    "priorityClassName": {
      "type": "string",
      "description": "Priority class name for pod scheduling"
    },
    "nodeSelector": {
      "type": "object",
      "description": "Node selector for pod assignment"
    },
    "tolerations": {
      "type": "array",
      "items": {
        "type": "object"
      },
      "description": "Tolerations for pod assignment"
    },
    "affinity": {
      "type": "object",
      "description": "Affinity rules for pod assignment"
    },
    "podSecurityContext": {
      "type": "object",
      "description": "Security context for the pod"
    },
    "securityContext": {
      "type": "object",
      "description": "Security context for the container"
    },
    "resources": {
      "type": "object",
      "properties": {
        "limits": {
          "type": "object",
          "properties": {
            "cpu": {
              "type": "string"
            },
            "memory": {
              "type": "string"
            }
          }
        },
        "requests": {
          "type": "object",
          "properties": {
            "cpu": {
              "type": "string"
            },
            "memory": {
              "type": "string"
            }
          }
        }
      },
      "description": "Resource requests and limits"
    },
    "podLabels": {
      "type": "object",
      "description": "Additional labels for pods"
    },
    "podAnnotations": {
      "type": "object",
      "description": "Annotations for pods"
    }
  },
  "required": [
    "namespace",
    "image",
    "keepalived",
    "hostNetwork",
    "priorityClassName"
  ]
}
